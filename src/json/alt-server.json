[
	{
		"name": "alt.on",
		"snippet": "alt.on('${1:eventName}', (${2:params,}) => {$0});",
		"documentation": "Event for when a player connects to the server."
	},
	{
		"name": "alt.onPlayerConnect",
		"snippet": "alt.on('playerConnect', (player) => {$0});",
		"documentation": "Event for when a player connects to the server."
	},
	{
		"name": "alt.onPlayerDisconnect",
		"snippet": "alt.on('playerDisconnect', (player, reason) => {$0});",
		"documentation": "Event for when a player disconnects from the server."
	},
	{
		"name": "alt.onConsoleCommand",
		"snippet": "alt.on('consoleCommand', (msg) => { {$0} });",
		"documentation": "Event for when a console command is issued."
	},
	{
		"name": "alt.onEntityEnterCheckpoint",
		"snippet": "alt.on('entityEnterCheckpoint', (checkPoint, entity) => {$0});",
		"documentation": "Event for when an entity enters a checkpoint."
	},
	{
		"name": "alt.onEntityLeaveCheckpoint",
		"snippet": "alt.on('entityLeaveCheckpoint', (checkPoint, entity) => {$0});",
		"documentation": "Event for when an entity leaves a checkpoint."
	},
	{
		"name": "alt.onEntityEnterColshape",
		"snippet": "alt.on('entityEnterColshape', (colshape, entity) => {$0});",
		"documentation": "Event for when an entity enters a colshape."
	},
	{
		"name": "alt.onEntityLeaveColshape",
		"snippet": "alt.on('entityLeaveColshape', (colshape, entity) => {$0});",
		"documentation": "Event for when an entity leaves a colshape."
	},
	{
		"name": "alt.onMetaChange",
		"snippet": "alt.on('metaChange', (entity, key, value) => {$0});",
		"documentation": "Called when an entities meta value changes."
	},
	{
		"name": "alt.onPlayerChangedVehicleSeat",
		"snippet": "alt.on('playerChangedVehicleSeat', (player, vehicle, oldseat, newseat) => {$0});",
		"documentation": "Called when a player switches seats."
	},
	{
		"name": "alt.onPlayerDamage",
		"snippet": "alt.on('playerDamage', (victim, attacker, weapon) => {$0});",
		"documentation": "Called when a player is damaged."
	},
	{
		"name": "alt.onPlayerDeath",
		"snippet": "alt.on('playerDeath', (victim, attacker, weapon) => {$0});",
		"documentation": "Called when a player dies."
	},
	{
		"name": "alt.onPlayerEnteredVehicle",
		"snippet": "alt.on('playerEnteredVehicle', (player, vehicle, seat) => {$0});",
		"documentation": "Called when a player enters a vehicle."
	},
	{
		"name": "alt.onPlayerLeftVehicle",
		"snippet": "alt.on('playerLeftVehicle', (player, vehicle, seat) => {$0});",
		"documentation": "Called when a player leaves a vehicle."
	},
	{
		"name": "alt.onRemoveEntity",
		"snippet": "alt.on('removeEntity', (target) => {$0});",
		"documentation": "Called when an entity is removed / deleted."
	},
	{
		"name": "alt.onSyncedMetaChange",
		"snippet": "alt.on('syncedMetaChange', (entity, key, value) => {$0});",
		"documentation": "Called when an entities synced meta value changes."
	},
	{
		"name": "alt.onClient",
		"snippet": "alt.onClient('${1:eventName}', (player, ${2:params,}) => {$3});${0}",
		"documentation": "Events triggered from a player's client."
	},
	{
		"name": "alt.emitClient",
		"snippet": "alt.emitClient(player, '${1:eventName}', ${2:params,});",
		"documentation": "Emit an event to a player."
	},
	{
		"name": "alt.emitClientAll",
		"snippet": "alt.emitClient(null, '${1:eventName}', ${2:params,});",
		"documentation": "Emit an event to all players."
	},
	{
		"name": "alt.import",
		"snippet": "import * as alt from 'alt';",
		"documentation": "Import alt for usage."
	},
	{
		"name": "alt.newVehicle",
		"snippet": "new alt.Vehicle(${1:modelAsString}, ${2:posX}, ${3:posY}, ${4:posZ}, ${5:rotX}, ${6:rotY}, ${7:rotZ});${0}",
		"documentation": "Create a vehicle. params: modelAsString, posX, posY, posZ, rotX, rotY, rotZ"
	},
	{
		"name": "alt.getPlayersByName",
		"snippet": "alt.getPlayersByName(${1:name});${0}",
		"documentation": "Returns an array of players by name."
	},
	{
		"name": "alt.log",
		"snippet": "alt.log(${1:message});${0}",
		"documentation": "Log a message to the alt:V console."
	},
	{
		"name": "alt.logError",
		"snippet": "alt.logError(${1:message});${0}",
		"documentation": "Log an error to the console."
	},
	{
		"name": "alt.newVector3",
		"snippet": "new alt.Vector3(${1:x}, ${2:y}, ${3:z});$0",
		"documentation": "Create a new Vector3"

	},
	{
		"name": "alt.newPointBlip",
		"snippet": "new alt.PointBlip(${1:type}, ${2:x}, ${3:y}, ${4:z});${0}",
		"documentation": "Create a new PointBlip"
	}
]